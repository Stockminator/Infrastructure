version: "3.8"
services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "4369:4369"
      - "5671:5671"
      - "5672:5672"
      - "25672:25672"
      - "15672:15672"
    networks:
      - stockminator_network

  mongodb:
    image: mongo
    container_name: mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=alma123
    volumes:
      - mongodb-data:/data/db
    networks:
      - stockminator_network
    ports:
      - 27017:27017
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo 10.10.10.60:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=alma123
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=alma123
    volumes:
      - mongodb-data
    depends_on:
      - mongodb
    networks:
      - stockminator_network
    ports:
      - 18081:8081
    healthcheck:
      test:  wget --quiet --tries=3 --spider http://admin:alma123@10.10.10.60:8081 || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  postgres:
    image: postgres:alpine # use latest official postgres version
    env_file:
      - postgres.env # configure postgres
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres-data:/var/lib/postgresql/data/ # persist data even if container shuts down
    networks:
      - stockminator_network
    ports:
      - 5431:5432

  keycloak:
    image: jboss/keycloak
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: admin
      DB_SCHEMA: public
      DB_PASSWORD: alma123
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      KEYCLOAK_IMPORT: /tmp/keycloak-realm.json
      KK_TO_RMQ_URL: rabbitmq
      KK_TO_RMQ_PORT: 5672
      KK_TO_RMQ_VHOST: /
      KK_TO_RMQ_EXCHANGE: amq.topic
      KK_TO_RMQ_USERNAME: guest
      KK_TO_RMQ_PASSWORD: guest
      # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
      #JDBC_PARAMS: "ssl=true"
    ports:
      - 4444:8080
    volumes:
      - ./keycloak-realm.json:/tmp/keycloak-realm.json
      - ./keycloak-to-rabbit-1.0.jar:/opt/jboss/keycloak/standalone/deployments/keycloak-to-rabbit-1.0.jar
#     source: https://github.com/aznamier/keycloak-event-listener-rabbitmq
    networks:
     - stockminator_network
    depends_on:
      - postgres

volumes:
  mongodb-data:
    name: mongodb-data
  postgres-data: # named volumes can be managed easier using docker-compose
    name: postgres-data
  keycloak-postgres-data: # named volumes can be managed easier using docker-compose
    name: keycloak-postgres-data

networks:
  stockminator_network:
    name: stockminator_network
