version: "3.8"
services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "4369:4369"
      - "5671:5671"
      - "5672:5672"
      - "25672:25672"
      - "15672:15672"
    networks:
      - stockminator_network

  eureka-server:
    image:  spring-cloud-netflix-example/eureka-server
    hostname: eureka-server
    ports:
      - "8761:8761"
    networks:
      - stockminator_network

  config-server:
    image:  spring-cloud-netflix-example/config-server
    links:
      - "eureka-server"
      - "rabbitmq"
    volumes:
      - ./config-server/config:/app/config
    networks:
      - stockminator_network

  mongodb:
    image: mongo
    container_name: mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=alma123
    volumes:
      - mongodb-data:/data/db
    networks:
      - stockminator_network
    ports:
      - 27017:27017
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo 10.10.10.60:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=alma123
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=alma123
    volumes:
      - mongodb-data
    depends_on:
      - mongodb
    networks:
      - stockminator_network
    ports:
      - 8081:8081
    healthcheck:
      test:  wget --quiet --tries=3 --spider http://admin:alma123@10.10.10.60:8081 || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  database:
    image: "postgres" # use latest official postgres version
    env_file:
      - postgres.env # configure postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data/ # persist data even if container shuts down

volumes:
  mongodb-data:
    name: mongodb-data
  postgres-data: # named volumes can be managed easier using docker-compose
    name: postgres-data

networks:
  stockminator_network:
    name: stockminator_network
